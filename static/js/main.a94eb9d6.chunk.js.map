{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","styles","container","map","label","type","name","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","event","target","console","log","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,iBCA1ED,EAAOC,QAAU,CAAC,UAAY,gC,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,yB,qHCgBfC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCqBQC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAK,OAChB,wBACEC,KAAK,SACLC,KAAMF,EAENJ,UAAWC,IAAOM,OAClBC,QAAST,EALX,SAOGK,GAJIA,S,gBCWAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAId,UAAWC,IAAOC,UAAtB,UACE,wCAAWQ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCAWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,K,gBCKE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAoBMC,EAAqB,WACzB,OAAOZ,EAAOC,EAAUC,GAQpBC,EAAQS,IACRR,EANkC,WACtC,IAAMD,EAAQS,IACd,OAAOT,EAAQU,KAAKC,MAAOd,EAAOG,EAAS,KAAO,EAIzBY,GAE3B,OACE,sBAAKzB,UAAWC,IAAOC,UAAvB,UACE,cAAC,EAAD,CAASP,MAAO,2BAAhB,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAnCgB,SAAA2B,GACtB,IAAQpB,EAASoB,EAAMC,OAAfrB,KAER,OADAsB,QAAQC,IAAIvB,GACJA,GACN,IAAK,OACHa,GAAQ,SAAAW,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHV,GAAW,SAAAU,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHT,GAAO,SAAAS,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAyBDjB,EAAQ,EACP,cAAC,EAAD,CAASlB,MAAO,aAAhB,SACE,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC,EAAD,CAAcE,QAAS,kCC3D/Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.a94eb9d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__mrkaD\",\"button\":\"FeedbackOptions_button__3nMFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1B5D6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__20_2U\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.container}>\n      {options.map(label => (\n        <button\n          type=\"button\"\n          name={label}\n          key={label}\n          className={styles.button}\n          onClick={onLeaveFeedback}\n        >\n          {label}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.container}>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage} %</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\n\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nimport styles from './App.module.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = event => {\n    const { name } = event.target;\n    console.log(name);\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <div className={styles.container}>\n      <Section title={'Please, leave a feedback'}>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n\n      {total > 0 ? (\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      ) : (\n        <Notification message={'No feedback has been given'} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}